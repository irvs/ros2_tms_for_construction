<?xml version="1.0"?>
<root main_tree_to_execute="BehaviorTree">
    <!-- ////////// -->
    <BehaviorTree ID="BehaviorTree">
        <Sequence>
            <Action ID="MongoValueWriter" input_value="false" mongo_param_name="SENSING_NEXTPOINT_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
            <Decorator ID="KeepRunningUntilFlgup" key="TERMINATE_FLG">
                <Sequence>
                    <Action ID="BlackboardValueReaderMongo" mongo_param_name="CONTINUE_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="CONTINUE_FLG"/>
                    <WhileDoElse>
                        <Action ID="ConditionalExpression" conditional_expression="CONTINUE_FLG == true"/>
                        <Sequence>
                            <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="initial_pose" subtask_name="subtask_zx200_change_pose"/>
                            <Action ID="MongoValueWriter" input_value="true" mongo_param_name="INITIAL_POS_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
                            <Parallel failure_threshold="1" success_threshold="-1">
                                <Action ID="BlackboardValueReaderMongo" mongo_param_name="INITIAL_POS_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="INITIAL_POS_FLG"/>
                                <Action ID="BlackboardValueReaderMongo" mongo_param_name="ARRIVAL_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="ARRIVAL_FLG"/>
                                <Action ID="BlackboardValueReaderMongo" mongo_param_name="SENSING_ARRIVAL_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="SENSING_ARRIVAL_FLG"/>
                                <Action ID="BlackboardValueReaderMongo" mongo_param_name="SENSING_LOADED_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="SENSING_LOADED_FLG"/>
                                <Action ID="BlackboardValueReaderMongo" mongo_param_name="SENSING_CHECK_MOUND_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="SENSING_CHECK_MOUND_FLG"/>
                                <Action ID="BlackboardValueReaderMongo" mongo_param_name="SENSING_NEXTPOINT_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="SENSING_NEXTPOINT_FLG"/>
                                <IfThenElse>
                                    <Action ID="ConditionalExpression" conditional_expression="ARRIVAL_FLG == true and SENSING_ARRIVAL_FLG == true and SENSING_LOADED_FLG == false and SENSING_CHECK_MOUND_FLG == false "/>
                                    <Sequence>
                                        <IfThenElse>
                                            <Action ID="ConditionalExpression" conditional_expression="SENSING_NEXTPOINT_FLG == true"/>
                                            <Action ID="LeafNodeZx200" model_name="zx200" record_name="SIM_GOAL" subtask_name="st_zx200_navigate_anywhere"/>
                                            <AlwaysSuccess/>
                                        </IfThenElse>
                                        <Action ID="MongoValueWriter" input_value="false" mongo_param_name="INITIAL_POS_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
                                        <RetryUntilSuccessful num_attempts="-1">
                                            <Fallback>
                                                <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="target_excavate_pose" subtask_name="subtask_zx200_excavate_simple_plan"/>
                                                <Delay delay_msec="5000">
                                                    <AlwaysFailure/>
                                                </Delay>
                                            </Fallback>
                                        </RetryUntilSuccessful>
                                        <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="target_excavate_pose" subtask_name="subtask_zx200_excavate_simple"/>
                                        <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="hold_soil_while_elevating_pose" subtask_name="subtask_zx200_change_pose"/>
                                        <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="hold_soil_while_turning_pose" subtask_name="subtask_zx200_change_pose"/>
                                        <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="release_pose" subtask_name="subtask_zx200_change_pose"/>
                                        <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="release_angle" subtask_name="subtask_zx200_release_simple"/>
                                        <Action ID="LeafNodeZx200" model_name="zx200" name="leaf_node_zx200" record_name="after_release_soil_pose" subtask_name="subtask_zx200_change_pose"/>
                                        <Delay delay_msec="3000">
                                            <AlwaysSuccess/>
                                        </Delay>
                                    </Sequence>
                                    <IfThenElse>
                                        <Action ID="ConditionalExpression" conditional_expression="( SENSING_LOADED_FLG == true or SENSING_CHECK_MOUND_FLG == true  ) and ARRIVAL_FLG == true and SENSING_ARRIVAL_FLG == true  and INITIAL_POS_FLG == true"/>
                                        <Sequence>
                                            <WhileDoElse>
                                                <Action ID="ConditionalExpression" conditional_expression="ARRIVAL_FLG == true and SENSING_ARRIVAL_FLG == true"/>
                                                <Sequence>
                                                    <Action ID="MongoValueWriter" input_value="true" mongo_param_name="MOVING_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
                                                    <Action ID="BlackboardValueReaderMongo" mongo_param_name="ARRIVAL_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="ARRIVAL_FLG"/>
                                                    <Action ID="BlackboardValueReaderMongo" mongo_param_name="SENSING_ARRIVAL_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU" output_port="SENSING_ARRIVAL_FLG"/>
                                                </Sequence>
                                                <Action ID="MongoValueWriter" input_value="false" mongo_param_name="MOVING_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
                                            </WhileDoElse>
                                            <IfThenElse>
                                                <Action ID="ConditionalExpression" conditional_expression="SENSING_CHECK_MOUND_FLG == true"/>
                                                <Action ID="MongoValueWriter" input_value="false" mongo_param_name="CONTINUE_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
                                                <AlwaysSuccess/>
                                            </IfThenElse>
                                        </Sequence>
                                        <Action ID="MongoValueWriter" input_value="false" mongo_param_name="MOVING_FLG" mongo_record_name="SAMPLE_BLACKBOARD_SHIMIZU"/>
                                    </IfThenElse>
                                </IfThenElse>
                            </Parallel>
                        </Sequence>
                        <SetBlackboard output_key="TERMINATE_FLG" value="true"/>
                    </WhileDoElse>
                </Sequence>
            </Decorator>
        </Sequence>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Action ID="BlackboardValueChecker">
            <inout_port name="key"/>
        </Action>
        <Action ID="BlackboardValueReaderMongo">
            <input_port name="mongo_param_name" type="std::string"/>
            <input_port name="mongo_record_name" type="std::string"/>
            <input_port name="output_port" type="std::string"/>
        </Action>
        <Action ID="BlackboardValueWriterSrv">
            <inout_port name="output_key"/>
            <inout_port name="value"/>
        </Action>
        <Action ID="BlackboardValueWriterTopic">
            <inout_port name="output_key"/>
            <inout_port name="value"/>
        </Action>
        <Action ID="ConditionalExpression">
            <input_port name="conditional_expression" type="std::string"/>
        </Action>
        <Action ID="ConditionalExpressionBool">
            <input_port name="conditional_expression_bool"/>
        </Action>
        <Decorator ID="KeepRunningUntilFlgup">
            <input_port name="key"/>
        </Decorator>
        <Action ID="LeafNodeIc120">
            <input_port default="ic120" name=" model_name"/>
            <inout_port name="record_name"/>
            <inout_port name="subtask_name"/>
        </Action>
        <Action ID="LeafNodeSampleZx120">
            <input_port default="zx120" name=" model_name"/>
            <inout_port name="record_name"/>
            <inout_port name="subtask_name"/>
        </Action>
        <Action ID="LeafNodeSampleZx200">
            <input_port default="zx200" name=" model_name"/>
            <inout_port name="record_name"/>
            <inout_port name="subtask_name"/>
        </Action>
        <Action ID="LeafNodeZx200">
            <input_port name="model_name" type="float"/>
            <input_port name="record_name" type="float"/>
            <input_port name="subtask_name" type="float"/>
        </Action>
        <Action ID="MongoValueWriter">
            <input_port name="input_value" type="std::string"/>
            <input_port name="mongo_param_name" type="std::string"/>
            <input_port name="mongo_record_name" type="std::string"/>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
